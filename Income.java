package bracestate.View;

import bracestate.ExpenditureDB;
import static java.awt.image.ImageObserver.HEIGHT;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Abi
 */
public class Income extends javax.swing.JFrame {

    String conString = "jdbc:postgresql://localhost:5432/Estate";
    String user = "postgres";
    String password = "abel";

    ResultSet rs = null;

    DefaultTableModel dm = new DefaultTableModel();

    PreparedStatement pst = null;

    public Income() {
        initComponents();
        loadFields();
        jTable1.setAutoCreateRowSorter(true);
        jTable2.setAutoCreateRowSorter(true);
        performIncomeCalculations();
        

    }

    private void loadFields() {
        String text = "0.00";
        double d = Double.parseDouble(text);
        txtFldGrandTotalRentUsed.setText(text);
        txtFldGrandTotalRentPaid.setText(text);
        txtFldGrandTotalIncome.setText(text);
        txtFldGrandTotalExpenditure.setText(text);
        txtFldIncome.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnRetrieve = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        comboBxMonth = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        comboBxYear = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        comboBxYearExpenditure = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        comboBxMonthExpenditure = new javax.swing.JComboBox<>();
        btnRetrieveExpenditure = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnGrandTotalExpenditure = new javax.swing.JButton();
        txtFldGrandTotalExpenditure = new javax.swing.JTextField();
        btnGrandTotalRentExpected = new javax.swing.JButton();
        btnGrandTotalRentPaid = new javax.swing.JButton();
        btnGrandTotalBalance = new javax.swing.JButton();
        txtFldGrandTotalRentUsed = new javax.swing.JTextField();
        txtFldGrandTotalRentPaid = new javax.swing.JTextField();
        txtFldGrandTotalIncome = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        txtFldIncome = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ACO HOLDINGS LIMITED - INCOME");
        setResizable(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("CASH FLOW"));

        btnRetrieve.setBackground(new java.awt.Color(255, 255, 0));
        btnRetrieve.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRetrieve.setText("Retrieve");
        btnRetrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter By Month"));

        comboBxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        comboBxMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBxMonthItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter By Year"));

        comboBxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "None" }));
        comboBxYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBxYearItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(0, 255, 213));
        jTable1.setForeground(new java.awt.Color(0, 0, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jLabel1.setText("Filter By Apartment Name:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(btnRetrieve, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRetrieve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("EXPENDITURE"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter By Year"));

        comboBxYearExpenditure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "None" }));
        comboBxYearExpenditure.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBxYearExpenditureItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxYearExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxYearExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter By Month"));

        comboBxMonthExpenditure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        comboBxMonthExpenditure.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBxMonthExpenditureItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxMonthExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxMonthExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnRetrieveExpenditure.setBackground(new java.awt.Color(255, 255, 0));
        btnRetrieveExpenditure.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRetrieveExpenditure.setText("Retrieve");
        btnRetrieveExpenditure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveExpenditureActionPerformed(evt);
            }
        });

        jTable2.setBackground(new java.awt.Color(0, 255, 213));
        jTable2.setForeground(new java.awt.Color(0, 0, 153));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRetrieveExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRetrieveExpenditure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnGrandTotalExpenditure.setBackground(new java.awt.Color(255, 255, 0));
        btnGrandTotalExpenditure.setText("GrandTotal Expenditure");
        btnGrandTotalExpenditure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrandTotalExpenditureActionPerformed(evt);
            }
        });

        txtFldGrandTotalExpenditure.setBackground(new java.awt.Color(0, 255, 204));

        btnGrandTotalRentExpected.setBackground(new java.awt.Color(255, 255, 0));
        btnGrandTotalRentExpected.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGrandTotalRentExpected.setText("Grand Total Rent Expected");
        btnGrandTotalRentExpected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrandTotalRentExpectedActionPerformed(evt);
            }
        });

        btnGrandTotalRentPaid.setBackground(new java.awt.Color(255, 255, 0));
        btnGrandTotalRentPaid.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGrandTotalRentPaid.setText("Grand Total Rent Paid");
        btnGrandTotalRentPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrandTotalRentPaidActionPerformed(evt);
            }
        });

        btnGrandTotalBalance.setBackground(new java.awt.Color(255, 255, 0));
        btnGrandTotalBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGrandTotalBalance.setText("Grand Total Balance");
        btnGrandTotalBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrandTotalBalanceActionPerformed(evt);
            }
        });

        txtFldGrandTotalRentUsed.setBackground(new java.awt.Color(0, 255, 204));
        txtFldGrandTotalRentUsed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtFldGrandTotalRentPaid.setBackground(new java.awt.Color(0, 255, 204));
        txtFldGrandTotalRentPaid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtFldGrandTotalIncome.setBackground(new java.awt.Color(0, 255, 204));
        txtFldGrandTotalIncome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Income"));

        txtFldIncome.setBackground(new java.awt.Color(0, 0, 0));
        txtFldIncome.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtFldIncome)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldIncome)
                .addContainerGap())
        );

        btnExit.setBackground(new java.awt.Color(255, 255, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnGrandTotalRentExpected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFldGrandTotalRentUsed))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnGrandTotalRentPaid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFldGrandTotalRentPaid))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFldGrandTotalIncome)
                                    .addComponent(btnGrandTotalBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnGrandTotalExpenditure)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFldGrandTotalExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGrandTotalExpenditure)
                            .addComponent(txtFldGrandTotalExpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnGrandTotalRentPaid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGrandTotalRentExpected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnGrandTotalBalance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtFldGrandTotalRentPaid, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFldGrandTotalRentUsed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtFldGrandTotalIncome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public DefaultTableModel getPayData() {
        //Add columns to TableModel
        //DefaultTableModel dm = new DefaultTableModel();

        //dm.addColumn("Acc_id");
        dm.addColumn("Housing Unit");
        dm.addColumn("Unit Name");
        dm.addColumn("House No");
        //dm.addColumn("Rent");
        dm.addColumn("T Name");
        //dm.addColumn("Description");
        //dm.addColumn("Transaction ");
        //dm.addColumn("Water charges");
        //dm.addColumn("Garbage charges");
        //dm.addColumn("Arrears");
        //dm.addColumn("Other charges");
        dm.addColumn("Expected amount");
        dm.addColumn("Amount paid");
        dm.addColumn("Balance");
        dm.addColumn("Year");
        dm.addColumn("Month");
        dm.addColumn("Date");

        //Select
        //String sql = "SELECT hunit, hname,hno, rent, tname, expected, paid, ba, year, month, date FROM accounts";
        String sql = "SELECT * FROM accounts";

        try {
            Class.forName("org.postgresql.Driver");
            Connection conn = DriverManager.getConnection(conString, user, password);

            //Prepared statement
            PreparedStatement st = conn.prepareStatement(sql);

            //st.execute();
            ResultSet rt = st.executeQuery();

            while (rt.next()) {
                //String id = rt.getString(1);
                String hunit = rt.getString(2);
                String hname = rt.getString(3);
                String hno = rt.getString(4);
                //String rent = rt.getString(5);
                String tname = rt.getString(6);
                //String payment = rt.getString(7);
                //String tno = rt.getString(8);
                //String water = rt.getString(9);
                //String garbage = rt.getString(10);
                //String arrears = rt.getString(11);
                //String other = rt.getString(12);
                String expected = rt.getString(13);
                String paid = rt.getString(14);
                String balance = rt.getString(19);
                String year = rt.getString(16);
                String month = rt.getString(17);
                String date = rt.getString(18);

                dm.addRow(new String[]{hunit, hname, hno, tname, expected, paid, balance, year, month, date});

            }
            return dm;
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }

    private void comboBxYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBxYearItemStateChanged
        String selected = comboBxYear.getSelectedItem().toString();

        RowFilter<DefaultTableModel, Object> rf = null;

        try {
            rf = RowFilter.regexFilter(selected, jTable1.getColumnModel().getColumnIndex("Year"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
        ((TableRowSorter) jTable1.getRowSorter()).setRowFilter(rf);
    }//GEN-LAST:event_comboBxYearItemStateChanged

    private void comboBxMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBxMonthItemStateChanged

        String selected = comboBxMonth.getSelectedItem().toString();

        RowFilter<DefaultTableModel, Object> rf = null;

        try {
            rf = RowFilter.regexFilter(selected, jTable1.getColumnModel().getColumnIndex("Month"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
        ((TableRowSorter) jTable1.getRowSorter()).setRowFilter(rf);
    }//GEN-LAST:event_comboBxMonthItemStateChanged

    private void btnRetrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveActionPerformed

        //AccountsDB fb = new AccountsDB();
        Income inc = new Income();

        dm = inc.getPayData();
        jTable1.setModel(dm);
    }//GEN-LAST:event_btnRetrieveActionPerformed

    private void btnRetrieveExpenditureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveExpenditureActionPerformed

        ExpenditureDB fb = new ExpenditureDB();

        DefaultTableModel dm = fb.getExpenditureData();
        jTable2.setModel(dm);
    }//GEN-LAST:event_btnRetrieveExpenditureActionPerformed

    private void comboBxYearExpenditureItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBxYearExpenditureItemStateChanged
        String selected = comboBxYearExpenditure.getSelectedItem().toString();

        //filterData(selected);
        RowFilter<DefaultTableModel, Object> rf = null;

        try {
            rf = RowFilter.regexFilter(selected, jTable2.getColumnModel().getColumnIndex("Year"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
        ((TableRowSorter) jTable2.getRowSorter()).setRowFilter(rf);
    }//GEN-LAST:event_comboBxYearExpenditureItemStateChanged

    private void comboBxMonthExpenditureItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBxMonthExpenditureItemStateChanged

        String selected = comboBxMonthExpenditure.getSelectedItem().toString();

        RowFilter<DefaultTableModel, Object> rf = null;

        try {
            rf = RowFilter.regexFilter(selected, jTable2.getColumnModel().getColumnIndex("Month"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
        ((TableRowSorter) jTable2.getRowSorter()).setRowFilter(rf);
    }//GEN-LAST:event_comboBxMonthExpenditureItemStateChanged

    public int getTotalExpenditureSum() {
        int rowsCount = jTable2.getRowCount();
        double sum = 0;
        try {
            for (int i = 0; i < rowsCount; i++) {
                sum = sum + Double.parseDouble(jTable2.getValueAt(i, 6).toString());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Empty Values!", "Error!", JOptionPane.OK_OPTION);
        }
        return (int) sum;
    }

    private void btnGrandTotalExpenditureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrandTotalExpenditureActionPerformed

        getTotalExpenditureSum();
        txtFldGrandTotalExpenditure.setText(Integer.toString(getTotalExpenditureSum()));
    }//GEN-LAST:event_btnGrandTotalExpenditureActionPerformed

    public int getGrandTotalRentExpected() {
        int rowsCount = jTable1.getRowCount();
        double sum = 0;
        try {
            for (int i = 0; i < rowsCount; i++) {
                sum = sum + Double.parseDouble(jTable1.getValueAt(i, 4).toString());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Empty Values!", "Error!", JOptionPane.OK_OPTION);
        }
        return (int) sum;
    }

    private void btnGrandTotalRentExpectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrandTotalRentExpectedActionPerformed

        getGrandTotalRentExpected();
        txtFldGrandTotalRentUsed.setText(Integer.toString(getGrandTotalRentExpected()));
    }//GEN-LAST:event_btnGrandTotalRentExpectedActionPerformed

    public int getGrandTotalRentPaid() {
        int rowsCount = jTable1.getRowCount();
        double sum = 0;
        try {
            for (int i = 0; i < rowsCount; i++) {
                sum = sum + Double.parseDouble(jTable1.getValueAt(i, 5).toString());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Empty Values!", "Error!", JOptionPane.OK_OPTION);
        }
        return (int) sum;
    }

    private void btnGrandTotalRentPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrandTotalRentPaidActionPerformed
        getGrandTotalRentPaid();
        txtFldGrandTotalRentPaid.setText(Integer.toString(getGrandTotalRentPaid()));
    }//GEN-LAST:event_btnGrandTotalRentPaidActionPerformed

    public int getGrandTotalBalance() {
        int rowsCount = jTable1.getRowCount();
        double sum = 0;
        try {
            for (int i = 0; i < rowsCount; i++) {
                sum = sum + Double.parseDouble(jTable1.getValueAt(i, 6).toString());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Empty Values!", "Error!", JOptionPane.OK_OPTION);
        }
        return (int) sum;
    }

    private void btnGrandTotalBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrandTotalBalanceActionPerformed
        getGrandTotalBalance();
        txtFldGrandTotalIncome.setText(Integer.toString(getGrandTotalBalance()));
    }//GEN-LAST:event_btnGrandTotalBalanceActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased

        try {

            Connection conn = DriverManager.getConnection(conString, user, password);

            //String sql = "SELECT * FROM accounts WHERE ba > 0 AND hname=?";
            String query = "SELECT hunit, hname,hno, tname, expected, paid, ba, year, month, date  FROM accounts WHERE  hname=?";
            Class.forName("org.postgresql.Driver");

            pst = conn.prepareStatement(query);

            pst.setString(1, txtSearch.getText());
            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));

            this.getPayData();

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int log = JOptionPane.showConfirmDialog(this, "Exit?", "Confirm Exit!", JOptionPane.YES_NO_OPTION);

        if (log == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void performIncomeCalculations() {
        DocumentFilter df = new DocumentFilter() {
            //@Override
            public void insertData(DocumentFilter.FilterBypass fb, int i, String string, AttributeSet as) throws BadLocationException {
                if (isDigit(string)) {
                    super.insertString(fb, HEIGHT, string, as);

                    calculateSetTotal();
                }
            }

            //@Override
            public void remove(DocumentFilter.FilterBypass fb, int i, int i1, String string, AttributeSet as) throws BadLocationException {
                super.replace(fb, i, i1, string, as);

                calculateSetTotal();
            }

            @Override
            public void replace(DocumentFilter.FilterBypass fb, int i, int i1, String string, AttributeSet as) throws BadLocationException {
                if (isDigit(string)) {
                    super.replace(fb, i, i1, string, as);

                    calculateSetTotal();
                }
            }

            private boolean isDigit(String string) {
                for (int n = 0; n < string.length(); n++) {
                    char c = string.charAt(n);//get a single character of the string
                    //System.out.println(c);
                    if (!Character.isDigit(c)) {//if its an alphabetic character or white space
                        return false;
                    }
                }
                return true;
            }

            void calculateSetTotal() {
                double sum = 0;

                if (!txtFldGrandTotalRentPaid.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldGrandTotalRentPaid.getText());
                }

                if (!txtFldGrandTotalExpenditure.getText().isEmpty()) {
                    sum -= Double.parseDouble(txtFldGrandTotalExpenditure.getText());
                }

                txtFldIncome.setText(String.valueOf(sum));
            }
        };

        ((AbstractDocument) (txtFldGrandTotalRentPaid.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldGrandTotalExpenditure.getDocument())).setDocumentFilter(df);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Income.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Income.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Income.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Income.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Income().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGrandTotalBalance;
    private javax.swing.JButton btnGrandTotalExpenditure;
    private javax.swing.JButton btnGrandTotalRentExpected;
    private javax.swing.JButton btnGrandTotalRentPaid;
    private javax.swing.JButton btnRetrieve;
    private javax.swing.JButton btnRetrieveExpenditure;
    private javax.swing.JComboBox<String> comboBxMonth;
    private javax.swing.JComboBox<String> comboBxMonthExpenditure;
    private javax.swing.JComboBox<String> comboBxYear;
    private javax.swing.JComboBox<String> comboBxYearExpenditure;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField txtFldGrandTotalExpenditure;
    public javax.swing.JTextField txtFldGrandTotalIncome;
    public javax.swing.JTextField txtFldGrandTotalRentPaid;
    public javax.swing.JTextField txtFldGrandTotalRentUsed;
    private javax.swing.JTextField txtFldIncome;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
