package bracestate.View;

import bracestate.AccountsDB;
import bracestate.Controller.AccountsController;
import bracestate.HousingUnitDB;
import bracestate.Model.AccountsModel;
import java.awt.event.ActionListener;
import static java.awt.image.ImageObserver.HEIGHT;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Abi
 */
public class Accounting extends javax.swing.JFrame {

    
     String conString = "jdbc:postgresql://localhost:5432/Estate";
    String user = "postgres";
    String password = "abel";

    //ResultSet rs = null;

    /**
     * Creates new form Accounting
     */
    public Accounting() {
        initComponents();

        String text = "0.00";
        double d = Double.parseDouble(text);
        txtFldArrears.setText(text);

        String textWater = "0.00";
        double w = Double.parseDouble(textWater);
        txtFldWater.setText(textWater);

        String textGarbage = "0.00";
        double g = Double.parseDouble(textGarbage);
        txtFldGarbage.setText(textGarbage);

        String textOther = "0.00";
        double o = Double.parseDouble(textOther);
        txtFldOther.setText(textOther);

        String exep = "0.00";
        double ex = Double.parseDouble(exep);
        txtFldExpectedAmount.setText(exep);

        String textpaid = "0.00";
        double paid = Double.parseDouble(textpaid);
        txtFldAmountPaid.setText(textpaid);

        String textbalance = "0.00";
        double bal = Double.parseDouble(textbalance);
        txtFldBalance.setText(textbalance);
        txtFldDeposit.setText(textbalance);

        txtFldHUnit.setEditable(false);
        txtFldHunitName.setEditable(false);
        txtFldNumber.setEditable(false);
        txtFldRent.setEditable(false);
        txtFldTenantName.setEditable(false);
        txtFldExpectedAmount.setEditable(false);
        txtFldBalance.setEditable(false);
        txtFldLocation.setEditable(false);

        performCalculations();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtFldHUnit = new javax.swing.JTextField();
        txtFldHunitName = new javax.swing.JTextField();
        txtFldNumber = new javax.swing.JTextField();
        txtFldRent = new javax.swing.JTextField();
        txtFldTenantName = new javax.swing.JTextField();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        btnPayRent = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDisplayRent = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtFldWater = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        txtFldGarbage = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txtFldArrears = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        txtFldOther = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        txtFldExpectedAmount = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        txtFldAmountPaid = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        txtFldBalance = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        comboBxPayment = new javax.swing.JComboBox();
        jPanel10 = new javax.swing.JPanel();
        txtFldTransaction = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        txtFldDeposit = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        year = new com.toedter.calendar.JYearChooser();
        jPanel12 = new javax.swing.JPanel();
        comboBxMonth = new javax.swing.JComboBox<>();
        jPanel13 = new javax.swing.JPanel();
        date = new com.toedter.calendar.JDateChooser();
        btnExit = new javax.swing.JButton();
        txtFldLocation = new javax.swing.JTextField();
        btnClearTable = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        btnSearchValues1 = new javax.swing.JButton();
        txtFldApartmentNamePay = new javax.swing.JTextField();

        setTitle("ACO HOLDINGS LIMITED - RENT PAYMENT");

        jPanel2.setPreferredSize(new java.awt.Dimension(1114, 576));

        jTable1.setBackground(new java.awt.Color(0, 255, 213));
        jTable1.setForeground(new java.awt.Color(0, 0, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txtFldHUnit.setPreferredSize(new java.awt.Dimension(90, 20));

        txtFldHunitName.setPreferredSize(new java.awt.Dimension(90, 20));

        txtFldNumber.setPreferredSize(new java.awt.Dimension(90, 20));

        txtFldRent.setPreferredSize(new java.awt.Dimension(90, 20));

        jDesktopPane1.setPreferredSize(new java.awt.Dimension(429, 422));

        btnPayRent.setBackground(new java.awt.Color(255, 255, 0));
        btnPayRent.setText("Pay Rent");
        btnPayRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayRentActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 0));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDisplayRent.setBackground(new java.awt.Color(255, 255, 0));
        btnDisplayRent.setText("Display Payment");
        btnDisplayRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayRentActionPerformed(evt);
            }
        });

        jButton1.setText("Display To Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Water charges"));

        txtFldWater.setBackground(new java.awt.Color(0, 255, 204));
        txtFldWater.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldWater, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldWater, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Garbage charges"));

        txtFldGarbage.setBackground(new java.awt.Color(0, 255, 204));
        txtFldGarbage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldGarbage, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldGarbage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Arrears"));

        txtFldArrears.setBackground(new java.awt.Color(0, 255, 204));
        txtFldArrears.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldArrears, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldArrears, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Penalty charges"));

        txtFldOther.setBackground(new java.awt.Color(0, 255, 204));
        txtFldOther.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldOther, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldOther, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Expected Amount"));

        txtFldExpectedAmount.setBackground(new java.awt.Color(0, 0, 0));
        txtFldExpectedAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFldExpectedAmount.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldExpectedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldExpectedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Amount Paid"));

        txtFldAmountPaid.setBackground(new java.awt.Color(0, 0, 0));
        txtFldAmountPaid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFldAmountPaid.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Balance"));

        txtFldBalance.setBackground(new java.awt.Color(0, 0, 0));
        txtFldBalance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFldBalance.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Payment Description"));

        comboBxPayment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bank", "Mobile Money", "Cash" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxPayment, 0, 124, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Transaction NO"));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Deposit"));

        txtFldDeposit.setBackground(new java.awt.Color(0, 255, 204));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDesktopPane1.setLayer(btnPayRent, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnReset, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnDisplayRent, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(73, 73, 73))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnPayRent, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDisplayRent, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPayRent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisplayRent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Year"));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Month"));

        comboBxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Date"));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnExit.setBackground(new java.awt.Color(255, 255, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnClearTable.setBackground(new java.awt.Color(255, 255, 0));
        btnClearTable.setText("Clear Table");
        btnClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtFldHUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldHunitName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldRent, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldTenantName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldLocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFldHUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtFldHunitName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFldNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFldRent, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFldTenantName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtFldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Search By Apartment name"));

        btnSearchValues1.setBackground(new java.awt.Color(255, 255, 0));
        btnSearchValues1.setText("Search");
        btnSearchValues1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchValues1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldApartmentNamePay, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchValues1)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFldApartmentNamePay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchValues1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(656, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(502, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        try {
            //String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            String hunit = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            String hunitname = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String location = jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString();
            String number = jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString();
            String rent = jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();
            String tname = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();

            txtFldHUnit.setText(hunit);
            txtFldHunitName.setText(hunitname);
            txtFldNumber.setText(number);
            txtFldRent.setText(rent);
            txtFldTenantName.setText(tname);
            txtFldLocation.setText(location);

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in Selection!!", "Access Denied", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnPayRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayRentActionPerformed

        AccountsDB accntsDB = new AccountsDB();

        try {
            if (txtFldHUnit.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Housing unit should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldHUnit.requestFocus();
            } else if (txtFldHunitName.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Housing unit Name not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldHunitName.requestFocus();
            } else if (txtFldNumber.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " House Number should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldNumber.requestFocus();
            } else if (txtFldRent.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Rent Charge should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldRent.requestFocus();
            } else if (txtFldTenantName.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Tenant Name should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldTenantName.requestFocus();
            } else if (comboBxPayment.getSelectedItem().toString().length() == 0) {
                JOptionPane.showMessageDialog(null, " Payment Description should not be blank!", "Error!", JOptionPane.OK_OPTION);
                comboBxPayment.requestFocus();
            } else if (txtFldTransaction.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Transaction Number not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldTransaction.requestFocus();
            } else if (txtFldWater.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Water charges should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldWater.requestFocus();
            } else if (txtFldGarbage.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Garbage charges should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldGarbage.requestFocus();
            } else if (txtFldArrears.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Please indicate arrears if applicable \n If not indicate 0!", "Error!", JOptionPane.OK_OPTION);
                txtFldArrears.requestFocus();
            } else if (txtFldOther.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " In case of no Other charges, indicate 0 !", "Error!", JOptionPane.OK_OPTION);
                txtFldOther.requestFocus();
            } else if (txtFldExpectedAmount.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Please compute the Total amount!", "Error!", JOptionPane.OK_OPTION);
                txtFldExpectedAmount.requestFocus();
            } else if (txtFldAmountPaid.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Amount paid should not be blank!", "Error!", JOptionPane.OK_OPTION);
                txtFldAmountPaid.requestFocus();
            } else if (txtFldBalance.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, " Please compute the Balance!", "Error!", JOptionPane.OK_OPTION);
                txtFldBalance.requestFocus();
            } else if (date.getDateFormatString().length() == 0) {
                JOptionPane.showMessageDialog(null, " Date should not be blank!", "Error!", JOptionPane.OK_OPTION);
                date.requestFocus();
            } else if (accntsDB.addRentPay(txtFldHUnit.getText(), txtFldHunitName.getText(), txtFldNumber.getText(), txtFldRent.getText(), txtFldTenantName.getText(), comboBxPayment.getSelectedItem().toString(), txtFldTransaction.getText(), txtFldWater.getText(), txtFldGarbage.getText(), txtFldArrears.getText(), txtFldOther.getText(), txtFldExpectedAmount.getText(), txtFldAmountPaid.getText(), txtFldBalance.getText(), year.getYear(), comboBxMonth.getSelectedItem().toString(), date.getDate().toString(), txtFldDeposit.getText(), txtFldLocation.getText())) {
                JOptionPane.showMessageDialog(null, "Rent payment Registered Successfully!");
                resetDetails();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Incorrect values!", "Error!", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnPayRentActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        txtFldTransaction.setText("");
        txtFldWater.setText("");
        txtFldGarbage.setText("");
        txtFldArrears.setText("");
        txtFldOther.setText("");
        txtFldExpectedAmount.setText("");
        txtFldAmountPaid.setText("");
        txtFldBalance.setText("");
        txtFldDeposit.setText("");
        txtFldHUnit.setText("");
        txtFldHunitName.setText("");
        txtFldNumber.setText("");
        txtFldRent.setText("");
        txtFldTenantName.setText("");
        txtFldLocation.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDisplayRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayRentActionPerformed
        DisplayPayment dPay = new DisplayPayment();
        dPay.show();
    }//GEN-LAST:event_btnDisplayRentActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DisplayPaymentPrint print = new DisplayPaymentPrint();
        print.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int log = JOptionPane.showConfirmDialog(this, "Exit?", "Confirm Exit!", JOptionPane.YES_NO_OPTION);

        if (log == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void clearTable() {
        txtFldApartmentNamePay.setText("");
        DefaultTableModel dmm = (DefaultTableModel) jTable1.getModel();
        dmm.getDataVector().removeAllElements();
        dmm.fireTableDataChanged();
        //jTable1.revalidate();
    }
     private void searchContentsRefresh() {
        DisplayPayments disp = new DisplayPayments();
        DefaultTableModel dmm = null;
        //jTable1.setModel(dmm);
        dmm = (DefaultTableModel) jTable1.getModel();
        dmm.getDataVector().removeAllElements();
        dmm.fireTableDataChanged();
    }
    
     public DefaultTableModel searchSpecifics() {
        //Add columns to TableModel
        DefaultTableModel dm = new DefaultTableModel();

        //dm.addColumn("Hid");
        dm.addColumn("Housing Unit");
        dm.addColumn("Name");
        dm.addColumn("Location");
        dm.addColumn("H Number");
        dm.addColumn("Rent");
        dm.addColumn("T Name");

        //Select
        String sql = "SELECT * FROM housingunit WHERE hu_name = '"+txtFldApartmentNamePay.getText()+"'";
        try {
            Class.forName("org.postgresql.Driver");
            Connection conn = DriverManager.getConnection(conString, user, password);

            //Prepared statement
            PreparedStatement st = conn.prepareStatement(sql);

            //st.execute();
            ResultSet rt = st.executeQuery();

            while (rt.next()) {
                //String id = rt.getString(1);
                String hUnit = rt.getString(2);
                String name = rt.getString(3);
                String location = rt.getString(4);
                //String category = rt.getString(5);
                String number = rt.getString(6);
                //String status = rt.getString(7);
                //String condition = rt.getString(8);
                String rent = rt.getString(9);
                String tenant = rt.getString(10);

                dm.addRow(new String[]{hUnit, name,location, number, rent, tenant});

            }
            return dm;
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }
     
    private void btnSearchValues1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchValues1ActionPerformed

        try {
            if (txtFldApartmentNamePay.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Apartment name should not be blank!", "Error", JOptionPane.OK_OPTION);
                txtFldApartmentNamePay.requestFocus();
            } else {
                DefaultTableModel dmm = (DefaultTableModel) jTable1.getModel();

                dmm = this.searchSpecifics();
                jTable1.setModel(dmm);
                txtFldApartmentNamePay.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSearchValues1ActionPerformed

    private void btnClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTableActionPerformed

        clearTable();
        searchContentsRefresh();
    }//GEN-LAST:event_btnClearTableActionPerformed

    public int getYear() {
        return year.getYear();
    }
    
    public String getDate() {
        return date.getDateFormatString().toString();
    }

    public String getDescription() {
        return comboBxPayment.getSelectedItem().toString();
    }

    public String getTransaction() {
        return txtFldTransaction.toString();
    }

    public double getRent() {
        return Double.parseDouble(txtFldRent.getText());
    }

    public double getWater() {
        return Double.parseDouble(txtFldWater.getText());
    }

    public double getGarbage() {
        return Double.parseDouble(txtFldGarbage.getText());
    }

    public double getArrears() {
        return Double.parseDouble(txtFldArrears.getText());
    }

    public double getOther() {
        return Double.parseDouble(txtFldOther.getText());
    }

    public double getDeposit() {
        return Double.parseDouble(txtFldDeposit.getText());
    }
    
    public double getExpected() {
        return Double.parseDouble(txtFldExpectedAmount.getText());
    }

    public void setExpected(double expected) {
        txtFldExpectedAmount.setText(Double.toString(expected));
    }

    public double getAmountPaid() {
        return Double.parseDouble(txtFldAmountPaid.getText());
    }

    public double getBalance() {
        return Double.parseDouble(txtFldBalance.getText());
    }

    public void setBalance(double balance) {
        txtFldBalance.setText(Double.toString(balance));
    }

    public void resetDetails() {
        txtFldTransaction.setText("");
        txtFldWater.setText("");
        txtFldGarbage.setText("");
        txtFldArrears.setText("");
        txtFldOther.setText("");
        txtFldExpectedAmount.setText("");
        txtFldAmountPaid.setText("");
        txtFldBalance.setText("");
        txtFldDeposit.setText("");
        txtFldHUnit.setText("");
        txtFldHunitName.setText("");
        txtFldNumber.setText("");
        txtFldRent.setText("");
        txtFldTenantName.setText("");
        txtFldLocation.setText("");
    }

    private void performCalculations() {
        DocumentFilter df = new DocumentFilter() {
            //@Override
            public void insertData(FilterBypass fb, int i, String string, AttributeSet as) throws BadLocationException {
                if (isDigit(string)) {
                    super.insertString(fb, HEIGHT, string, as);

                    calculateSetTotal();
                }
            }

            //@Override
            public void remove(FilterBypass fb, int i, int i1, String string, AttributeSet as) throws BadLocationException {
                super.replace(fb, i, i1, string, as);

                calculateSetTotal();
            }

            @Override
            public void replace(FilterBypass fb, int i, int i1, String string, AttributeSet as) throws BadLocationException {
                if (isDigit(string)) {
                    super.replace(fb, i, i1, string, as);

                    calculateSetTotal();
                }
            }

            private boolean isDigit(String string) {
                for (int n = 0; n < string.length(); n++) {
                    char c = string.charAt(n);//get a single character of the string
                    //System.out.println(c);
                    if (!Character.isDigit(c)) {//if its an alphabetic character or white space
                        return false;
                    }
                }
                return true;
            }

            void calculateSetTotal() {
                double sum = 0;

                if (!txtFldRent.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldRent.getText());
                }
                if (!txtFldWater.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldWater.getText());
                }
                if (!txtFldGarbage.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldGarbage.getText());
                }
                if (!txtFldArrears.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldArrears.getText());
                }
                if (!txtFldOther.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldOther.getText());
                }
                if (!txtFldDeposit.getText().isEmpty()) {
                    sum += Double.parseDouble(txtFldDeposit.getText());
                }

                txtFldExpectedAmount.setText(String.valueOf(sum));

                if (!txtFldAmountPaid.getText().isEmpty()) {
                    sum -= Double.parseDouble(txtFldAmountPaid.getText());
                }

                txtFldBalance.setText(String.valueOf(sum));
            }
        };

        ((AbstractDocument) (txtFldRent.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldWater.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldGarbage.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldArrears.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldOther.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldDeposit.getDocument())).setDocumentFilter(df);
        ((AbstractDocument) (txtFldAmountPaid.getDocument())).setDocumentFilter(df);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accounting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accounting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accounting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accounting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accounting().setVisible(true);
                //Accounting accnts = new Accounting();
                //accnts.setVisible(true);

                //Accounting accounts = new Accounting();
                //AccountsModel model = new AccountsModel();
                //AccountsController controller = new AccountsController(accounts, model);
                //accounts.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearTable;
    private javax.swing.JButton btnDisplayRent;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPayRent;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearchValues;
    private javax.swing.JButton btnSearchValues1;
    public javax.swing.JComboBox<String> comboBxMonth;
    public javax.swing.JComboBox comboBxPayment;
    public com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField txtFldAmountPaid;
    private javax.swing.JTextField txtFldApartmentName;
    private javax.swing.JTextField txtFldApartmentNamePay;
    public javax.swing.JTextField txtFldArrears;
    public javax.swing.JTextField txtFldBalance;
    private javax.swing.JTextField txtFldDeposit;
    public javax.swing.JTextField txtFldExpectedAmount;
    public javax.swing.JTextField txtFldGarbage;
    public javax.swing.JTextField txtFldHUnit;
    public javax.swing.JTextField txtFldHunitName;
    private javax.swing.JTextField txtFldLocation;
    public javax.swing.JTextField txtFldNumber;
    public javax.swing.JTextField txtFldOther;
    public javax.swing.JTextField txtFldRent;
    public javax.swing.JTextField txtFldTenantName;
    public javax.swing.JTextField txtFldTransaction;
    public javax.swing.JTextField txtFldWater;
    public com.toedter.calendar.JYearChooser year;
    // End of variables declaration//GEN-END:variables
}
