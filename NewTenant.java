package bracestate.View;

import bracestate.NewTenantDB;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Abel
 */
public class NewTenant extends javax.swing.JFrame {

    private static final int IMG_WIDTH = 240;
    private static final int IMG_HEIGHT = 180;
    ImageIcon iIcon;
    WritableRaster raster;
    DataBufferByte data;
    File file;
    
    String conString = "jdbc:postgresql://localhost:5432/Estate";
    String user = "postgres";
    String password = "abel";

    ResultSet rs = null;
    
    public NewTenant() {
        initComponents();
        radioBtnYesPaid.setSelected(true);

        String amount = "0.00";
        double depositAmount = Double.parseDouble(amount);
        txtFldAmountPaid.setText(amount);
    }

    public String getTenantName() {
        return txtFldTenantNameRegister.toString();
    }

    public String getGender() {
        return comboBxGender.getSelectedItem().toString();
    }

    public String getAddress() {
        return txtFldAddress.toString();
    }

    public String getEmailAddress() {
        return txtFldEmailAddress.toString();
    }

    public int getMobileNo() {
        return Integer.parseInt(txtFldMobileNumber.getText());
    }

    public int getIDNO() {
        return Integer.parseInt(txtFldIDNO.getText());
    }

    public String getDateOfJoining() {
        return dateOfJoining.getDateFormatString().toString();
    }

    public double getAmount() {
        return Double.parseDouble(txtFldAmountPaid.getText());
    }

    public String getHousingUnit() {
        return comboBxHousingUnit.getSelectedItem().toString();
    }

    public String getHUName() {
        return txtFldHousingUnitName.toString();
    }

    public String getRooms() {
        return comboBxRooms.getSelectedItem().toString();
    }

    public String getHouseNumber() {
        return txtFldTenantHouseNumber.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFldHousingUnitName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        comboBxHousingUnit = new javax.swing.JComboBox();
        txtFldAddress = new javax.swing.JTextField();
        emailAddress = new javax.swing.JLabel();
        dateOfJoining = new com.toedter.calendar.JDateChooser();
        txtFldIDNO = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnExitNewTenant = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtFldAmountPaid = new javax.swing.JTextField();
        btnDisplay = new javax.swing.JButton();
        txtFldMobileNumber = new javax.swing.JTextField();
        btnCreateNewTenant = new javax.swing.JButton();
        txtFldEmailAddress = new javax.swing.JTextField();
        btnResetTenant = new javax.swing.JButton();
        radioBtnPaidNo = new javax.swing.JRadioButton();
        comboBxGender = new javax.swing.JComboBox();
        radioBtnYesPaid = new javax.swing.JRadioButton();
        comboBxRooms = new javax.swing.JComboBox();
        txtFldTenantHouseNumber = new javax.swing.JTextField();
        txtFldTenantNameRegister = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelImage = new javax.swing.JLabel();
        btnUpload_ID = new javax.swing.JButton();
        txtFldPath = new javax.swing.JTextField();

        setTitle("ACO HOLDINGS LIMITED - NEW TENANT REGISTRATION");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Registration of a New Tenant"));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("Paid Deposit?");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Date of Joining");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("Room Category");

        comboBxHousingUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Apartment", "Bungalow", "Masionette" }));

        emailAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emailAddress.setForeground(new java.awt.Color(255, 255, 0));
        emailAddress.setText("Email Address");

        dateOfJoining.setDateFormatString("yyyy-MMM-d");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 0));
        jLabel12.setText("Housing Unit");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Mobile Number");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Address");

        btnExitNewTenant.setBackground(new java.awt.Color(255, 255, 0));
        btnExitNewTenant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnExitNewTenant.setText("Exit");
        btnExitNewTenant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitNewTenantActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("ID NO");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 0));
        jLabel9.setText("Deposit Amount");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("House Number");

        btnDisplay.setBackground(new java.awt.Color(255, 255, 0));
        btnDisplay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDisplay.setText("Display");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        btnCreateNewTenant.setBackground(new java.awt.Color(255, 255, 0));
        btnCreateNewTenant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCreateNewTenant.setText("Create");
        btnCreateNewTenant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewTenantActionPerformed(evt);
            }
        });

        btnResetTenant.setBackground(new java.awt.Color(255, 255, 0));
        btnResetTenant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnResetTenant.setText("Reset");
        btnResetTenant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetTenantActionPerformed(evt);
            }
        });

        radioBtnPaidNo.setForeground(new java.awt.Color(255, 255, 0));
        radioBtnPaidNo.setText("No");

        comboBxGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        radioBtnYesPaid.setForeground(new java.awt.Color(255, 255, 0));
        radioBtnYesPaid.setText("Yes");

        comboBxRooms.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Singles", "Doubles", "Bedsitter", "1 Bedroom", "2 Bedroom", "3 Bedroom", "4 Bedroom", "5 Bedroom", "Business stalls", "Offices", "Other(Specify)" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Gender");

        btnUpload_ID.setBackground(new java.awt.Color(255, 255, 0));
        btnUpload_ID.setText("Upload ID");
        btnUpload_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpload_IDActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldHousingUnitName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboBxHousingUnit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(emailAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(dateOfJoining, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldIDNO, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnExitNewTenant, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldAmountPaid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnDisplay, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldMobileNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnCreateNewTenant, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldEmailAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnResetTenant, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(radioBtnPaidNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboBxGender, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(radioBtnYesPaid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(comboBxRooms, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldTenantHouseNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldTenantNameRegister, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(labelImage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnUpload_ID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtFldPath, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtFldTenantNameRegister, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboBxGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtFldIDNO, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFldMobileNumber, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFldEmailAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFldAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emailAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFldTenantHouseNumber)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(radioBtnYesPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(radioBtnPaidNo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFldAmountPaid)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBxHousingUnit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFldHousingUnitName)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBxRooms, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpload_ID)
                                    .addComponent(txtFldPath, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(labelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(dateOfJoining, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(btnCreateNewTenant, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnResetTenant, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExitNewTenant, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldTenantNameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioBtnYesPaid)
                            .addComponent(radioBtnPaidNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBxHousingUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(labelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailAddress)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldHousingUnitName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBxRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(txtFldPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpload_ID)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFldIDNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldTenantHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(dateOfJoining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateNewTenant)
                    .addComponent(btnResetTenant)
                    .addComponent(btnExitNewTenant)
                    .addComponent(btnDisplay))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void resetDetails() {
        
        txtFldTenantNameRegister.setText("");
        comboBxGender.setSelectedItem("");
        txtFldAddress.setText("");
        txtFldEmailAddress.setText("");
        txtFldMobileNumber.setText("");
        txtFldIDNO.setText("");
        dateOfJoining.setDateFormatString("");
        txtFldAmountPaid.setText("");
        comboBxHousingUnit.setSelectedItem("");
        txtFldHousingUnitName.setText("");
        comboBxRooms.setSelectedItem("");
        txtFldTenantHouseNumber.setText("");
    }

    private void saveDetails(){
        
        try {
        String date = dateOfJoining.getDate().toString();
        String name = txtFldTenantNameRegister.getText();
        String gender = comboBxGender.getSelectedItem().toString();
        String hUnit = comboBxHousingUnit.getSelectedItem().toString();
        String rooms = comboBxRooms.getSelectedItem().toString();
        
        String address = txtFldAddress.getText();
        String email = txtFldEmailAddress.getText();
        String mobile = txtFldMobileNumber.getText();
        String idNo = txtFldIDNO.getText();
        Double amount = Double.parseDouble(txtFldAmountPaid.getText());
        String hName = txtFldHousingUnitName.getText();
        String hNo = txtFldTenantHouseNumber.getText();
        
        File image = new File(txtFldPath.getText());
        
        FileInputStream fis = new FileInputStream(image);
        
        String selectedPay = "";

        if (radioBtnYesPaid.isSelected()) {
            selectedPay = "Yes";
        } else if (radioBtnPaidNo.isSelected()) {
            selectedPay = "No";
            txtFldAmountPaid.setVisible(false);
        }
         
        Class.forName("org.postgresql.Driver").newInstance();
        Connection conn = DriverManager.getConnection(conString, user, password); 
        
        String sql = "INSERT into tenants(name,gender,address,email,mobile,id_no,date_join,paid,amount,h_unit,hu_name,category,h_no,images,image_name) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

        PreparedStatement pst = conn.prepareStatement(sql);

        pst.setString(1, name);
        pst.setString(2, gender);
        pst.setString(3, address);
        pst.setString(4, email);
        pst.setString(5, mobile);
        pst.setString(6, idNo);
        pst.setString(7, date);
        pst.setString(8, selectedPay);
        pst.setDouble(9, amount);
        pst.setString(10, hUnit);
        pst.setString(11, hName);
        pst.setString(12, rooms);
        pst.setString(13, hNo);
        pst.setBinaryStream(14, fis, (int)image.length());
        pst.setString(15, image.getName());
        
        int rowsAffected = pst.executeUpdate();
        conn.close();
        
        JOptionPane.showMessageDialog(this, "Record Inserted Successfully!", "Success", JOptionPane.OK_OPTION);
        resetDetails();
        }catch(Exception ex){
           
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    
    private void btnCreateNewTenantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewTenantActionPerformed

        saveDetails();
//        NewTenantDB nDB = new NewTenantDB();
//
//        String selectedPay = "";
//
//        if (radioBtnYesPaid.isSelected()) {
//            selectedPay = "Yes";
//        } else if (radioBtnPaidNo.isSelected()) {
//            selectedPay = "No";
//            txtFldAmountPaid.setVisible(false);
//        }
//
//        try {
//            if (txtFldTenantNameRegister.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Tenant Name should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldTenantNameRegister.requestFocus();
//            } else if (comboBxGender.getSelectedItem().toString().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Gender should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                comboBxGender.requestFocus();
//            } else if (txtFldAddress.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Address should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldAddress.requestFocus();
//            } else if (txtFldEmailAddress.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Email Address should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldEmailAddress.requestFocus();
//            } else if (txtFldMobileNumber.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Mobile Number should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldMobileNumber.requestFocus();
//            } else if (txtFldIDNO.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " ID NO should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldIDNO.requestFocus();
//            } else if (dateOfJoining.getDateFormatString().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Date should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                dateOfJoining.requestFocus();
//            } else if (txtFldAmountPaid.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Amount paid should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldAmountPaid.requestFocus();
//            } else if (comboBxHousingUnit.getSelectedItem().toString().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Housing Unit should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                comboBxHousingUnit.requestFocus();
//            } else if (txtFldHousingUnitName.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Housing unit Name should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldHousingUnitName.requestFocus();
//            } else if (comboBxRooms.getSelectedItem().toString().length() == 0) {
//                JOptionPane.showMessageDialog(null, " Room category should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                comboBxRooms.requestFocus();
//            } else if (txtFldTenantHouseNumber.getText().length() == 0) {
//                JOptionPane.showMessageDialog(null, " House Number should not be blank!", "Error!", JOptionPane.OK_OPTION);
//                txtFldTenantHouseNumber.requestFocus();
//            } else if (nDB.addTenant(txtFldTenantNameRegister.getText(), comboBxGender.getSelectedItem().toString(), txtFldAddress.getText(), txtFldEmailAddress.getText(), txtFldMobileNumber.getText(), txtFldIDNO.getText(), dateOfJoining.getDate().toString(), selectedPay, txtFldAmountPaid.getText(), comboBxHousingUnit.getSelectedItem().toString(), txtFldHousingUnitName.getText(), comboBxRooms.getSelectedItem().toString(), txtFldTenantHouseNumber.getText(), labelImage.getText())) {
//                JOptionPane.showMessageDialog(null, "New Tenant Registered Successfully!");
//                resetDetails();
//            } else {
//                JOptionPane.showMessageDialog(null, "Incorrect values!", "Error!", JOptionPane.OK_OPTION);
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Incorrect values!", "Error!", JOptionPane.OK_OPTION);
//        }
    }//GEN-LAST:event_btnCreateNewTenantActionPerformed

    private void btnExitNewTenantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitNewTenantActionPerformed
        int answer = JOptionPane.showConfirmDialog(this, "Exit?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (answer == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnExitNewTenantActionPerformed

    private void btnResetTenantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetTenantActionPerformed
        resetDetails();
    }//GEN-LAST:event_btnResetTenantActionPerformed

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        DisplayTenants dispT = new DisplayTenants();
        dispT.show();
    }//GEN-LAST:event_btnDisplayActionPerformed

 
    
    private void btnUpload_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpload_IDActionPerformed
        JFileChooser fChooser = null;
        //fChooser.showOpenDialog(null);
        
         //= fChooser.getSelectedFile();
        //fChooser.setCurrentDirectory(file);
        FileNameExtensionFilter filter;
        fChooser = new JFileChooser();
        fChooser.setCurrentDirectory(file);
        filter = new FileNameExtensionFilter("jpeg,gif and png files", "jpg","gif","png");
        fChooser.addChoosableFileFilter(filter);
        //String filename = file.getAbsolutePath();
        
        int i = fChooser.showOpenDialog(this);
        if (i == JFileChooser.APPROVE_OPTION){
        
          file = fChooser.getSelectedFile();
          txtFldPath.setText(file.getAbsolutePath());
          
          try{
              BufferedImage oImage = ImageIO.read(file);
              int  type = oImage.getType() == 0 ? BufferedImage.TYPE_INT_ARGB : oImage.getType();
              
              BufferedImage resizeImg = resizeImage(oImage, type);
              iIcon = new ImageIcon(toImage(resizeImg));
              
              //Converting buffered image to byte array
              raster =  resizeImg.getRaster();
              data = (DataBufferByte) raster.getDataBuffer();
          }
          catch(IOException e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
        }
        
        labelImage.setIcon(iIcon);
        repaint();
        fChooser.setCurrentDirectory(file);
        
        //labelImage.setIcon(iIcon);
        
    }//GEN-LAST:event_btnUpload_IDActionPerformed

      public Image toImage(BufferedImage bufferedImage) {
        return Toolkit.getDefaultToolkit().createImage(bufferedImage.getSource());
      }
    
    private static BufferedImage resizeImage(BufferedImage originalImage, int type) {
        BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
        Graphics2D g = resizedImage.createGraphics();
        g.drawImage(originalImage, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
        g.dispose();
 
        return resizedImage;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewTenant().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNewTenant;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnExitNewTenant;
    private javax.swing.JButton btnResetTenant;
    private javax.swing.JButton btnUpload_ID;
    public javax.swing.JComboBox comboBxGender;
    public javax.swing.JComboBox comboBxHousingUnit;
    public javax.swing.JComboBox comboBxRooms;
    public com.toedter.calendar.JDateChooser dateOfJoining;
    private javax.swing.JLabel emailAddress;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelImage;
    public javax.swing.JRadioButton radioBtnPaidNo;
    public javax.swing.JRadioButton radioBtnYesPaid;
    public javax.swing.JTextField txtFldAddress;
    public javax.swing.JTextField txtFldAmountPaid;
    public javax.swing.JTextField txtFldEmailAddress;
    public javax.swing.JTextField txtFldHousingUnitName;
    public javax.swing.JTextField txtFldIDNO;
    public javax.swing.JTextField txtFldMobileNumber;
    private javax.swing.JTextField txtFldPath;
    public javax.swing.JTextField txtFldTenantHouseNumber;
    public javax.swing.JTextField txtFldTenantNameRegister;
    // End of variables declaration//GEN-END:variables
}
